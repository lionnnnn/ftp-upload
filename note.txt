
# 2020.12.12
课堂笔记
    一、问题：
        1. 打日志 => 基本输入输出 / 或者保存到文件
        2. 单测
        3. 拓展性 事件
        4. 重复多冗余
        5. 对外API
        6. checklist 单测没测好
        7. 功能未完成
    二、ftp 并行 / sftp 串行 / 单元测试


# 2020.12.19
    一、问题：
        1. 异常场景 跑不起来 也没提示怎么错了 提示要提示到哪个字段不对或者怎么样 
        2. 100个文件 错了一个 需要告知哪个错了 没有api去获取成功错误文件 失败重传次数三次 进入要做参数校验 异常处理try catch
        3. 一次性的 每次都要重新实例化
        4. 模块化封装不到位 暴露太多内部细节
        5. 没有单测 测试不全


# 2020.12.26
    一、问题：
        1. 分层 并串行不和主代码耦合在一起
        2. 单一职责
        3. 先写用户demo
        4. api重复的去掉
        5. 数据结构定义到对象 不让用户直接访问
        6. 数据结构不参与上层细节 数据隐藏
        7. 模块分层不够深入OO FP
        8. 重试/ 并串行（业务） 和 基础功能不是一层
        9. 单测没写  api设计完以后就应该写单元测试 
            等价划分，
            边界值，
            错误推测（反向操作 先用了错误的顺序执行代码），
            判定表驱动（排列组合）


    .description('连接服务器')
    .option('-h, --host [host]', 'host地址', '47.107.157.97')
    .option('-p, --port [port]', '端口号', 21)
    .option('-u, --user [user]', '用户名', 'ftp')
    .option('-P, --password [password]', '密码', 'Admin@123')

    .requiredOption('-p, --path [path]', '上传文件路径', './upload_files/')
    .requiredOption('-d, --destPath [destPath]', '服务器路径', '/yjc/')

    .option('-d, --destPath [destPath]', '服务器路径', '/')



// sftp 默认登录信息
const DEFAULT_SFTP_OPTIONS = {
    host: '47.107.157.97',
    port: 22,
    user: 'sftp',
    password: 'Admin@123'
};


// ftp 默认登录信息P
const DEFAULT_FTP_OPTIONS = {
    host: '47.107.157.97',
    port: 21,
    user: 'ftp',
    password: 'Admin@123'
};
